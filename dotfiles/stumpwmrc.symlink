;; -*- lisp -*-

(in-package :stumpwm)

(load "/usr/share/common-lisp/source/stumpwm/contrib/net.lisp")
(load "/usr/share/common-lisp/source/stumpwm/contrib/cpu.lisp")
(load "/usr/share/common-lisp/source/stumpwm/contrib/notifications.lisp")

(set-prefix-key (kbd "C-y"))

(defun cat (&rest strings) "A shortcut for (concatenate 'string foo bar)."
  (apply 'concatenate 'string strings))

(defvar *foreground-color* "darkcyan")
(defvar *background-color* "white")
(defvar *mode-line-bg-color* "black")
(defvar *border-color* *foreground-color*)
(defvar *terminal* "mate-terminal")
(defvar *home-directory* "/home/pwoolcock")
(defvar *terminal-command* *terminal*)

(setf *frame-number-map* "0123456789")
(setf *window-number-map* "0123456789") ; does this actually *do* anything?

(defcommand firefox () ()
  "run firefox"
  (run-or-raise "firefox" '(:class "Firefox")))

(defcommand my-reload () ()
  "reload stump"
  (run-commands "loadrc" "reload"))

(defcommand terminal () ()
  "run a terminal with my startup script"
  (run-or-raise "mate-terminal" '(:title "Terminal")))

(defcommand volume-up () ()
  "turn the volume up on the alsa mixer"
  (run-or-raise "amixer sset Master playback 2dB+" '(:title "Volume Up")))

(defcommand volume-down () ()
  "turn the volume up on the alsa mixer"
  (run-or-raise "amixer sset Master playback 2dB-" '(:title "Volume Up")))

(defcommand lock-screen () ()
  "lock screen"
  (run-or-raise "xscreensaver-command -lock" '(:title "Lock Screen")))

(define-key *top-map* (kbd "M-2") "terminal")
(define-key *top-map* (kbd "M-3") "firefox")
(define-key *top-map* (kbd "M-4") "pidgin")
(define-key *top-map* (kbd "M-F9") "loadrc")
(define-key *top-map* (kbd "Pause") "gother")
(define-key *top-map* (kbd "C-Pause") "grouplist")
(define-key *top-map* (kbd "KP_Up") "volume-up")
(define-key *top-map* (kbd "KP_Down") "volume-down")
;(define-key *top-map* (kbd "KP_Enter") "pianobar-toggle-pause")

(define-key *root-map* (kbd "N") '*notifications-map*)
(define-key *root-map* (kbd "C-l") "lock-screen")

(setf *mouse-focus-policy* :sloppy) ;; :click, :ignore, :sloppy

;; Theme

(set-focus-color *foreground-color*)
(set-unfocus-color *background-color*)

(set-fg-color *foreground-color*)
(set-bg-color *background-color*)
(set-border-color *border-color*)

(run-shell-command (cat "xsetroot -solid " *background-color*))

(setf *mode-line-foreground-color* *foreground-color*)
(setf *mode-line-background-color* *mode-line-bg-color*)
(setf *mode-line-border-color* *border-color*)
(setf *mode-line-border-width* 0)
(setf *mode-line-pad-x* 0)
(setf *mode-line-pad-y* 0)
(setf *mode-line-position* :top)
(setf *mode-line-timeout* 5)
(setf *screen-mode-line-format*
      (list '(:eval (run-shell-command "date '+%I:%M %p %a %F'|tr -d [:cntrl:]" t)) " | %c | %l | [^B%n^b] %W (^[^B^1*%N^b^])"))

(if (not (head-mode-line (current-head)))
    (toggle-mode-line (current-screen) (current-head)))


